// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: options/query_validate.proto

/*
Package options is a generated protocol buffer package.

It is generated from these files:
	options/query_validate.proto

It has these top-level messages:
	QueryValidate
*/
package options

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type QueryValidate_FilterOperator int32

const (
	QueryValidate_EQ    QueryValidate_FilterOperator = 0
	QueryValidate_MATCH QueryValidate_FilterOperator = 1
	QueryValidate_GT    QueryValidate_FilterOperator = 2
	QueryValidate_GE    QueryValidate_FilterOperator = 3
	QueryValidate_LT    QueryValidate_FilterOperator = 4
	QueryValidate_LE    QueryValidate_FilterOperator = 5
	QueryValidate_ALL   QueryValidate_FilterOperator = 6
)

var QueryValidate_FilterOperator_name = map[int32]string{
	0: "EQ",
	1: "MATCH",
	2: "GT",
	3: "GE",
	4: "LT",
	5: "LE",
	6: "ALL",
}
var QueryValidate_FilterOperator_value = map[string]int32{
	"EQ":    0,
	"MATCH": 1,
	"GT":    2,
	"GE":    3,
	"LT":    4,
	"LE":    5,
	"ALL":   6,
}

func (x QueryValidate_FilterOperator) Enum() *QueryValidate_FilterOperator {
	p := new(QueryValidate_FilterOperator)
	*p = x
	return p
}
func (x QueryValidate_FilterOperator) String() string {
	return proto.EnumName(QueryValidate_FilterOperator_name, int32(x))
}
func (x *QueryValidate_FilterOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryValidate_FilterOperator_value, data, "QueryValidate_FilterOperator")
	if err != nil {
		return err
	}
	*x = QueryValidate_FilterOperator(value)
	return nil
}
func (QueryValidate_FilterOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorQueryValidate, []int{0, 0}
}

type QueryValidate_FilterType int32

const (
	QueryValidate_DEFAULT QueryValidate_FilterType = 0
	QueryValidate_STRING  QueryValidate_FilterType = 1
	QueryValidate_NUMBER  QueryValidate_FilterType = 2
)

var QueryValidate_FilterType_name = map[int32]string{
	0: "DEFAULT",
	1: "STRING",
	2: "NUMBER",
}
var QueryValidate_FilterType_value = map[string]int32{
	"DEFAULT": 0,
	"STRING":  1,
	"NUMBER":  2,
}

func (x QueryValidate_FilterType) Enum() *QueryValidate_FilterType {
	p := new(QueryValidate_FilterType)
	*p = x
	return p
}
func (x QueryValidate_FilterType) String() string {
	return proto.EnumName(QueryValidate_FilterType_name, int32(x))
}
func (x *QueryValidate_FilterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryValidate_FilterType_value, data, "QueryValidate_FilterType")
	if err != nil {
		return err
	}
	*x = QueryValidate_FilterType(value)
	return nil
}
func (QueryValidate_FilterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorQueryValidate, []int{0, 1}
}

type QueryValidate struct {
	DisableSorting     *bool                          `protobuf:"varint,1,opt,name=disable_sorting,json=disableSorting" json:"disable_sorting,omitempty"`
	Allow              []QueryValidate_FilterOperator `protobuf:"varint,2,rep,name=allow,enum=atlas.query.QueryValidate_FilterOperator" json:"allow,omitempty"`
	Deny               []QueryValidate_FilterOperator `protobuf:"varint,3,rep,name=deny,enum=atlas.query.QueryValidate_FilterOperator" json:"deny,omitempty"`
	FilterType         *QueryValidate_FilterType      `protobuf:"varint,4,opt,name=filter_type,json=filterType,enum=atlas.query.QueryValidate_FilterType" json:"filter_type,omitempty"`
	EnableNestedFields *bool                          `protobuf:"varint,5,opt,name=enable_nested_fields,json=enableNestedFields" json:"enable_nested_fields,omitempty"`
	XXX_unrecognized   []byte                         `json:"-"`
}

func (m *QueryValidate) Reset()                    { *m = QueryValidate{} }
func (m *QueryValidate) String() string            { return proto.CompactTextString(m) }
func (*QueryValidate) ProtoMessage()               {}
func (*QueryValidate) Descriptor() ([]byte, []int) { return fileDescriptorQueryValidate, []int{0} }

func (m *QueryValidate) GetDisableSorting() bool {
	if m != nil && m.DisableSorting != nil {
		return *m.DisableSorting
	}
	return false
}

func (m *QueryValidate) GetAllow() []QueryValidate_FilterOperator {
	if m != nil {
		return m.Allow
	}
	return nil
}

func (m *QueryValidate) GetDeny() []QueryValidate_FilterOperator {
	if m != nil {
		return m.Deny
	}
	return nil
}

func (m *QueryValidate) GetFilterType() QueryValidate_FilterType {
	if m != nil && m.FilterType != nil {
		return *m.FilterType
	}
	return QueryValidate_DEFAULT
}

func (m *QueryValidate) GetEnableNestedFields() bool {
	if m != nil && m.EnableNestedFields != nil {
		return *m.EnableNestedFields
	}
	return false
}

var E_Validate = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*QueryValidate)(nil),
	Field:         52121,
	Name:          "atlas.query.validate",
	Tag:           "bytes,52121,opt,name=validate",
	Filename:      "options/query_validate.proto",
}

func init() {
	proto.RegisterType((*QueryValidate)(nil), "atlas.query.QueryValidate")
	proto.RegisterEnum("atlas.query.QueryValidate_FilterOperator", QueryValidate_FilterOperator_name, QueryValidate_FilterOperator_value)
	proto.RegisterEnum("atlas.query.QueryValidate_FilterType", QueryValidate_FilterType_name, QueryValidate_FilterType_value)
	proto.RegisterExtension(E_Validate)
}

func init() { proto.RegisterFile("options/query_validate.proto", fileDescriptorQueryValidate) }

var fileDescriptorQueryValidate = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0xdd, 0x34, 0x6d, 0x77, 0xbd, 0xc5, 0x3a, 0x0c, 0x3e, 0x84, 0x45, 0x21, 0x14, 0xc4, 0xfa,
	0xd0, 0x89, 0xf6, 0x51, 0x11, 0xe9, 0x6a, 0x5a, 0x17, 0xb2, 0x5d, 0x36, 0x9b, 0x55, 0xf0, 0xa5,
	0xa4, 0xcd, 0x4d, 0x1c, 0x18, 0x67, 0xe2, 0x64, 0xaa, 0xf6, 0x4b, 0xc4, 0xef, 0xf0, 0x07, 0x25,
	0x93, 0x74, 0xb5, 0x0f, 0x22, 0x3e, 0x9d, 0xe1, 0x9c, 0x7b, 0x4e, 0xee, 0xcd, 0xbd, 0xf0, 0x40,
	0x95, 0x86, 0x2b, 0x59, 0x05, 0x9f, 0xb7, 0xa8, 0x77, 0xab, 0x2f, 0xa9, 0xe0, 0x59, 0x6a, 0x90,
	0x95, 0x5a, 0x19, 0x45, 0x07, 0xa9, 0x11, 0x69, 0xc5, 0xac, 0x76, 0xea, 0x17, 0x4a, 0x15, 0x02,
	0x03, 0x2b, 0xad, 0xb7, 0x79, 0x90, 0x61, 0xb5, 0xd1, 0xbc, 0x34, 0x4a, 0x37, 0xe5, 0xa3, 0x9f,
	0x2e, 0xdc, 0xbd, 0xaa, 0x6b, 0xdf, 0xb5, 0x31, 0xf4, 0x31, 0xdc, 0xcb, 0x78, 0x95, 0xae, 0x05,
	0xae, 0x2a, 0xa5, 0x0d, 0x97, 0x85, 0xe7, 0xf8, 0xce, 0xf8, 0x24, 0x1e, 0xb6, 0xf4, 0x75, 0xc3,
	0xd2, 0x57, 0xd0, 0x4b, 0x85, 0x50, 0x5f, 0xbd, 0x8e, 0xef, 0x8e, 0x87, 0xd3, 0x27, 0xec, 0x8f,
	0x2f, 0xb3, 0x83, 0x4c, 0x36, 0xe7, 0xc2, 0xa0, 0xbe, 0x2c, 0x51, 0xa7, 0x46, 0xe9, 0xb8, 0xf1,
	0xd1, 0x97, 0xd0, 0xcd, 0x50, 0xee, 0x3c, 0xf7, 0x7f, 0xfd, 0xd6, 0x46, 0xe7, 0x30, 0xc8, 0x2d,
	0xbf, 0x32, 0xbb, 0x12, 0xbd, 0xae, 0xef, 0x8c, 0x87, 0xd3, 0x47, 0xff, 0x4c, 0x49, 0x76, 0x25,
	0xc6, 0x90, 0xdf, 0xbe, 0xe9, 0x53, 0xb8, 0x8f, 0xd2, 0xce, 0x2b, 0xb1, 0x32, 0x98, 0xad, 0x72,
	0x8e, 0x22, 0xab, 0xbc, 0x9e, 0x9d, 0x9a, 0x36, 0xda, 0xd2, 0x4a, 0x73, 0xab, 0x8c, 0x22, 0x18,
	0x1e, 0x76, 0x44, 0xfb, 0xd0, 0x09, 0xaf, 0xc8, 0x11, 0xbd, 0x03, 0xbd, 0x8b, 0x59, 0xf2, 0xfa,
	0x2d, 0x71, 0x6a, 0x6a, 0x91, 0x90, 0x8e, 0xc5, 0x90, 0xb8, 0x35, 0x46, 0x09, 0xe9, 0x5a, 0x0c,
	0x49, 0x8f, 0x1e, 0x83, 0x3b, 0x8b, 0x22, 0xd2, 0x1f, 0x3d, 0x03, 0xf8, 0xdd, 0x19, 0x1d, 0xc0,
	0xf1, 0x9b, 0x70, 0x3e, 0xbb, 0x89, 0x12, 0x72, 0x44, 0x01, 0xfa, 0xd7, 0x49, 0x7c, 0xbe, 0x5c,
	0x10, 0xa7, 0x7e, 0x2f, 0x6f, 0x2e, 0xce, 0xc2, 0x98, 0x74, 0x9e, 0xbf, 0x87, 0x93, 0xfd, 0xda,
	0xe9, 0x43, 0xd6, 0x2c, 0x99, 0xed, 0x97, 0xcc, 0x6c, 0x97, 0x97, 0xcd, 0x91, 0x78, 0x3f, 0xbe,
	0xbb, 0xbe, 0x33, 0x1e, 0x4c, 0x4f, 0xff, 0xfe, 0x63, 0xe2, 0xdb, 0xb0, 0xb3, 0xf3, 0x0f, 0x8b,
	0x82, 0x9b, 0x8f, 0xdb, 0x35, 0xdb, 0xa8, 0x4f, 0x01, 0x97, 0xb9, 0x5a, 0x0b, 0xf5, 0x4d, 0x95,
	0x28, 0x9b, 0x1b, 0xda, 0x4c, 0x0a, 0x94, 0x13, 0x9b, 0x34, 0xb1, 0x49, 0x93, 0xbd, 0x35, 0x68,
	0xaf, 0xf2, 0x45, 0x8b, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x97, 0xf3, 0x55, 0xe2, 0xa7, 0x02,
	0x00, 0x00,
}
