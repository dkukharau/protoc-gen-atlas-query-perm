// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example/example.proto

package example

import options "github.com/infobloxopen/protoc-gen-atlas-query-validate/options"
import query "github.com/infobloxopen/atlas-app-toolkit/query"
import _ "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.

var ExampleMessagesRequireQueryValidation = map[string]map[string]options.FilteringOption{
	"User": {
		"first_name":           options.FilteringOption{Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_GT, options.QueryValidate_GE, options.QueryValidate_LT, options.QueryValidate_LE}, FilterType: options.QueryValidate_STRING},
		"weight":               options.FilteringOption{Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_LE}, FilterType: options.QueryValidate_NUMBER},
		"speciality":           options.FilteringOption{DisableSorting: true, Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_EQ, options.QueryValidate_GT, options.QueryValidate_GE, options.QueryValidate_LT, options.QueryValidate_LE}, FilterType: options.QueryValidate_STRING},
		"comment":              options.FilteringOption{FilterType: options.QueryValidate_STRING},
		"last_name":            options.FilteringOption{FilterType: options.QueryValidate_STRING},
		"id":                   options.FilteringOption{Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_ALL}, FilterType: options.QueryValidate_STRING},
		"custom_type_string":   options.FilteringOption{FilterType: options.QueryValidate_STRING},
		"home_address.city":    options.FilteringOption{DisableSorting: true, Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_MATCH, options.QueryValidate_GT, options.QueryValidate_GE, options.QueryValidate_LT, options.QueryValidate_LE}, FilterType: options.QueryValidate_STRING},
		"home_address.country": options.FilteringOption{FilterType: options.QueryValidate_STRING},
	},
	"CustomType": {},
	"Address": {
		"city":    options.FilteringOption{DisableSorting: true, Deny: []options.QueryValidate_FilterOperator{options.QueryValidate_MATCH, options.QueryValidate_GT, options.QueryValidate_GE, options.QueryValidate_LT, options.QueryValidate_LE}, FilterType: options.QueryValidate_STRING},
		"country": options.FilteringOption{FilterType: options.QueryValidate_STRING},
	},
	"ListRequest":  {},
	"ReadRequest":  {},
	"UserResponse": {},
}
var ExampleMethodsRequireFilteringValidation = map[string]string{
	"/example.TestService/List": "User",
}
var ExampleMethodsRequireSortingValidation = map[string]string{
	"/example.TestService/List": "User",
	"/example.TestService/Read": "User",
}

func ExampleValidateFiltering(methodName string, f *query.Filtering) error {
	objName, ok := ExampleMethodsRequireFilteringValidation[methodName]
	if !ok {
		return nil
	}
	var info map[string]options.FilteringOption
	info, ok = ExampleMessagesRequireQueryValidation[objName]
	if !ok {
		return nil
	}
	return options.ValidateFiltering(f, info)
}
func ExampleValidateSorting(methodName string, s *query.Sorting) error {
	objName, ok := ExampleMethodsRequireSortingValidation[methodName]
	if !ok {
		return nil
	}
	var info map[string]options.FilteringOption
	info, ok = ExampleMessagesRequireQueryValidation[objName]
	if !ok {
		return nil
	}
	return options.ValidateSorting(s, info)
}
